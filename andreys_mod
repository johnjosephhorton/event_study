library(ggplot2)
library(dplyr)
library(magrittr)
library(lfe)

SimulateStaticPanel <- function(T, N, sigma, beta){
  index <- 1:N
  time <- 1:T
  unit.effects <- rnorm(N)
  time.effects <- rnorm(T)
  unit.time.trends <- rnorm(N)
  epsilon <- rnorm(N*T, 0, sigma)
  df <- expand.grid(index = index, time = time) %>%
    group_by(index) %>% 
    mutate(treatment.date = sample(1:T,1)) %>%
    mutate(treated = time > treatment.date) %>%
    mutate(t = as.numeric(time))
  df$y <- with(df, beta * treated + unit.effects[index] + time.effects[time] + unit.time.trends[index] * time + epsilon) 
  df
}


EstimateBeta <- function(df){ 
  m <- felm(y ~ treated | index + factor(index):t + time | 0 | index, data = df)
  coef(m)["treatedTRUE"]
}

betas <- replicate(100, EstimateBeta(SimulateStaticPanel(20, 100, 0.1, 1))) %>% as.numeric


df <- SimulateStaticPanel(20, 100, 0.1, 1)
EstimateBeta(df)


g <- ggplot(data = df, aes(x = time, y = y, group = index, colour = factor(treated))) + geom_line() +
  facet_wrap(~treatment.date, ncol = 5)


SimulateStaticPanelTrend <- function(T, N, sigma, beta, gamma){
  index <- 1:N
  time <- 1:T
  unit.effects <- rnorm(N)
  time.effects <- rnorm(T)
  unit.time.trends <- rnorm(N)
  epsilon <- rnorm(N*T, 0, sigma)
  df <- expand.grid(index = index, time = time) %>%
    group_by(index) %>% 
    mutate(treatment.date = sample(1:T,1)) %>%
    mutate(treated = time > treatment.date) %>%
    mutate(relative.time = ifelse(time > treatment.date, time - treatment.date, 0), 
           t = as.numeric(time)
    )
  df$y <- with(df, gamma * relative.time + beta * treated + unit.effects[index] + time.effects[time] + unit.time.trends[index] * time + epsilon) 
  df
}


df <- SimulateStaticPanelTrend(20, 100, 0.1, 1, 0.1)

m <- felm(y ~ treated + relative.time | index + factor(index):t + time | 0 | index, data = df)
summary(m)


g <- ggplot(data = df, aes(x = time, y = y, group = index, colour = factor(treated))) + geom_line() +
  facet_wrap(~treatment.date, ncol = 5)


SimulateDynamicPanelTrend <- function(T, N, sigma, beta, dyn_gamma, num_dynamic_pers, gamma){
  index <- 1:N
  time <- 1:T
  unit.effects <- rnorm(N)
  time.effects <- rnorm(T)
  unit.time.trends <- rnorm(N)
  epsilon <- rnorm(N*T, 0, sigma)
  df <- expand.grid(index = index, time = time) %>%
    group_by(index) %>% 
    mutate(treatment.date = sample(1:T,1)) %>%
    mutate(treated = time > treatment.date) %>%
    mutate(relative_full.time = time - treatment.date, 
           relative.time = ifelse(time > treatment.date & time <= treatment.date + num_dynamic_pers, time - treatment.date, 0), 
           t = as.numeric(time)
           , factor_time = as.factor(relative.time)
    )
  df <- model.matrix(~ 0 + factor_time, df) %>%
  as.data.frame() %>%
  bind_cols(df) 
  
  df$y <- with(df, gamma * relative_full.time + dyn_gamma[1]*factor_time1 + dyn_gamma[2]*factor_time2 + dyn_gamma[3]*factor_time3 + dyn_gamma[4]*factor_time4 + dyn_gamma[5]*factor_time5 + unit.effects[index] + time.effects[time] + epsilon) 
  df
}


this_num_dynamic_pers <- 5
this_dyn_gamma <- runif(this_num_dynamic_pers)
df <- SimulateDynamicPanelTrend(T = 10, N = 100, sigma = 0.1, dyn_gamma = this_dyn_gamma, num_dynamic_pers = this_num_dynamic_pers, gamma = 0)

m <- felm(y ~ treated + relative_full.time | index + factor(index):t + time | 0 | index, data = df)
summary(m)
mean(this_dyn_gamma)

### Correct specification is identified (e.g. no trend)
m_dyn <- felm(y ~ factor_time1 + factor_time2 + factor_time3 + factor_time4 + factor_time5 | index + time | 0 | index, data = df)
summary(m_dyn)
print(this_dyn_gamma)

### Time trends leads to colinearity
m_dyn <- felm(y ~ factor_time1 + factor_time2 + factor_time3 + factor_time4 + factor_time5 + relative_full.time| index + time | 0 | index, data = df)
summary(m_dyn)
print(this_dyn_gamma)


### With time trend:

df <- SimulateDynamicPanelTrend(T = 20, N = 100, sigma = 0.1, dyn_gamma = this_dyn_gamma, num_dynamic_pers = this_num_dynamic_pers, gamma = .1)

m <- felm(y ~ treated + relative.time | index + factor(index):t + time | 0 | index, data = df)
summary(m)
mean(this_dyn_gamma)

### Correct specification is not identified
m_dyn <- felm(y ~ factor_time1 + factor_time2 + factor_time3 + factor_time4 + factor_time5 | index + time | 0 | index, data = df)
summary(m_dyn)
print(this_dyn_gamma)

### Time trends leads to colinearity
m_dyn <- felm(y ~ factor_time1 + factor_time2 + factor_time3 + factor_time4 + factor_time5 + relative.time| index + time | 0 | index, data = df)
summary(m_dyn)
print(this_dyn_gamma)
